<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Arr" xml:space="preserve">
    <value>Arr</value>
  </data>
  <data name="BlankPage" xml:space="preserve">
    <value>This page is intentionally left blank.</value>
  </data>
  <data name="Dep" xml:space="preserve">
    <value>Dep</value>
  </data>
  <data name="Difficulty" xml:space="preserve">
    <value>Difficulty</value>
  </data>
  <data name="Duty" xml:space="preserve">
    <value>Duty</value>
  </data>
  <data name="Ends" xml:space="preserve">
    <value>Ends</value>
  </data>
  <data name="EndsAt" xml:space="preserve">
    <value>Ends at</value>
  </data>
  <data name="Loco" xml:space="preserve">
    <value>Loco</value>
  </data>
  <data name="Notes" xml:space="preserve">
    <value>Notes</value>
  </data>
  <data name="Operator" xml:space="preserve">
    <value>Operator</value>
  </data>
  <data name="ServiceInTrain" xml:space="preserve">
    <value>Service in {0} train {1}</value>
  </data>
  <data name="Starts" xml:space="preserve">
    <value>Starts</value>
  </data>
  <data name="StartsAt" xml:space="preserve">
    <value>Starts at</value>
  </data>
  <data name="Station" xml:space="preserve">
    <value>Station</value>
  </data>
  <data name="Time" xml:space="preserve">
    <value>Time</value>
  </data>
  <data name="Track" xml:space="preserve">
    <value>Track</value>
  </data>
  <data name="DutyContinuesOnNextPage" xml:space="preserve">
    <value>NOTE: Duty continues on next page.</value>
  </data>
  <data name="NoMoreTasksInDuty" xml:space="preserve">
    <value>NOTE: No more tasks in duty.</value>
  </data>
  <data name="MaxSpeed" xml:space="preserve">
    <value>Max speed</value>
  </data>
  <data name="MaxNumberOfWagons" xml:space="preserve">
    <value>Max number of wagons</value>
  </data>
  <data name="Cargo" xml:space="preserve">
    <value>Cargo</value>
  </data>
  <data name="Carrier" xml:space="preserve">
    <value>Carrier</value>
  </data>
  <data name="Class" xml:space="preserve">
    <value>Class</value>
  </data>
  <data name="Consignee" xml:space="preserve">
    <value>Consignee</value>
  </data>
  <data name="Destination" xml:space="preserve">
    <value>Destination</value>
  </data>
  <data name="Epoch" xml:space="preserve">
    <value>Epoch</value>
  </data>
  <data name="Origin" xml:space="preserve">
    <value>Origin</value>
  </data>
  <data name="Shipper" xml:space="preserve">
    <value>Shipper</value>
  </data>
  <data name="Instructions" xml:space="preserve">
    <value>Instructions</value>
  </data>
  <data name="From" xml:space="preserve">
    <value>From</value>
  </data>
  <data name="To" xml:space="preserve">
    <value>To</value>
  </data>
  <data name="Train" xml:space="preserve">
    <value>Train</value>
  </data>
  <data name="TrainsetTurnus" xml:space="preserve">
    <value>Wagonset turnus</value>
  </data>
  <data name="TurnForNextDay" xml:space="preserve">
    <value>Replace to next day?</value>
  </data>
  <data name="Wagons" xml:space="preserve">
    <value>Wagons</value>
  </data>
  <data name="LocoTurnus" xml:space="preserve">
    <value>Loco turnus</value>
  </data>
  <data name="Wait" xml:space="preserve">
    <value>Please, wait...</value>
  </data>
  <data name="FetchingData" xml:space="preserve">
    <value>Fetching data...</value>
  </data>
  <data name="PrintedTime" xml:space="preserve">
    <value>Printed {0:d} {0:t}</value>
  </data>
  <data name="CreatingReport" xml:space="preserve">
    <value>Creating report...</value>
  </data>
  <data name="TrainStartLabels" xml:space="preserve">
    <value>Train start labels</value>
  </data>
  <data name="GraphicTimetables" xml:space="preserve">
    <value>Graphic timetables</value>
  </data>
  <data name="BlockDestinations" xml:space="preserve">
    <value>Block destinations</value>
  </data>
  <data name="DriverDuties" xml:space="preserve">
    <value>Train driver duties</value>
  </data>
  <data name="Waybills" xml:space="preserve">
    <value>Waybills</value>
  </data>
  <data name="Trainsets" xml:space="preserve">
    <value>Wagonsets</value>
  </data>
  <data name="LocoSchedules" xml:space="preserve">
    <value>Loco turnus</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="NumberOfWagonsPerBlockIndicatesMaxToBeSentFromThisStation" xml:space="preserve">
    <value>Number of wagons per block indicates max that may be sent from this station</value>
  </data>
  <data name="NumberOfWagonsPerBlockIndicatesMaxInTrain" xml:space="preserve">
    <value>Number of wagons per block indicates total maximum.</value>
  </data>
  <data name="VehicleScheduleNumber" xml:space="preserve">
    <value>Schedule</value>
  </data>
  <data name="StationInstructions" xml:space="preserve">
    <value>Station instructions</value>
  </data>
  <data name="Content" xml:space="preserve">
    <value>Content</value>
  </data>
  <data name="Turnus" xml:space="preserve">
    <value>Turnus</value>
  </data>
  <data name="TrainsWithSpecialAttension" xml:space="preserve">
    <value>Trains with special attention</value>
  </data>
  <data name="Days" xml:space="preserve">
    <value>Days</value>
  </data>
  <data name="Railcar" xml:space="preserve">
    <value>Railcar</value>
  </data>
  <data name="SpareLoco" xml:space="preserve">
    <value>Spare loco</value>
  </data>
  <data name="SpareRailcar" xml:space="preserve">
    <value>Spare railcar</value>
  </data>
  <data name="Continued" xml:space="preserve">
    <value>Continued</value>
  </data>
  <data name="Driver" xml:space="preserve">
    <value>Train driver</value>
  </data>
  <data name="GraphicLocoSchedules" xml:space="preserve">
    <value>Graphic loco schedules</value>
  </data>
  <data name="Page" xml:space="preserve">
    <value>Page</value>
  </data>
  <data name="FirstReadInstructionsOnLastPage" xml:space="preserve">
    <value>First, read instructions on last page!</value>
  </data>
  <data name="Arrival" xml:space="preserve">
    <value>Arrival</value>
  </data>
  <data name="Departure" xml:space="preserve">
    <value>Departure</value>
  </data>
  <data name="MondayShort" xml:space="preserve">
    <value>Mo</value>
  </data>
  <data name="TuesdayShort" xml:space="preserve">
    <value>Tu</value>
  </data>
  <data name="WednesdayShort" xml:space="preserve">
    <value>We</value>
  </data>
  <data name="ThursdayShort" xml:space="preserve">
    <value>Th</value>
  </data>
  <data name="FridayShort" xml:space="preserve">
    <value>Fr</value>
  </data>
  <data name="SaturdayShort" xml:space="preserve">
    <value>Sa</value>
  </data>
  <data name="SundayShort" xml:space="preserve">
    <value>Su</value>
  </data>
  <data name="TrainsTimeAllocation" xml:space="preserve">
    <value>Trains over day</value>
  </data>
  <data name="StationTrainOrder" xml:space="preserve">
    <value>Train dispatch table</value>
  </data>
  <data name="WagonTurnus" xml:space="preserve">
    <value>Wagon turnus</value>
  </data>
  <data name="ShunterLoco" xml:space="preserve">
    <value>Shunter</value>
  </data>
  <data name="VehicleType" xml:space="preserve">
    <value>Vehicle</value>
  </data>
  <data name="Number" xml:space="preserve">
    <value>Number</value>
  </data>
  <data name="DccAddress" xml:space="preserve">
    <value>DCC-address</value>
  </data>
  <data name="VehiclesPerStation" xml:space="preserve">
    <value>Vehicles per station</value>
  </data>
  <data name="VehiclesPerOwner" xml:space="preserve">
    <value>Vehicles per owner</value>
  </data>
  <data name="StationDuties" xml:space="preserve">
    <value>Station duties</value>
  </data>
  <data name="IsWith" xml:space="preserve">
    <value>Is with?</value>
  </data>
  <data name="IsSetUp" xml:space="preserve">
    <value>Is set up?</value>
  </data>
  <data name="Owner" xml:space="preserve">
    <value>Owner</value>
  </data>
  <data name="ReinforcementLocoTo" xml:space="preserve">
    <value>Reinforcement loco to {0}</value>
  </data>
  <data name="NeedForVehicles" xml:space="preserve">
    <value>Need for vehicles</value>
  </data>
  <data name="FirstDay" xml:space="preserve">
    <value>First day</value>
  </data>
  <data name="StationDutyGeneralNote" xml:space="preserve">
    <value>The station duty is intended to help planning activities ahead.</value>
  </data>
  <data name="Trainset" xml:space="preserve">
    <value>Wagonset</value>
  </data>
  <data name="NumberOfWagons" xml:space="preserve">
    <value>Number of wagons</value>
  </data>
  <data name="WagonCard" xml:space="preserve">
    <value>Wagon card</value>
  </data>
  <data name="WagonsetWith" xml:space="preserve">
    <value>Wagon set with {0}</value>
  </data>
  <data name="InitialStart" xml:space="preserve">
    <value>Initial start</value>
  </data>
  <data name="TrainNumber" xml:space="preserve">
    <value>Train number</value>
  </data>
  <data name="MayBeStaffedWithNumberOfPersons" xml:space="preserve">
    <value>May be staffed with {0} persons.</value>
  </data>
  <data name="WagonNumber" xml:space="preserve">
    <value>Wagon number</value>
  </data>
  <data name="VehiclesOverview" xml:space="preserve">
    <value>Vehicles overview</value>
  </data>
  <data name="TrainsetCards" xml:space="preserve">
    <value>Trainset cards</value>
  </data>
  <data name="LocoAdresses" xml:space="preserve">
    <value>Loco adresses</value>
  </data>
  <data name="ForbiddenDccAddress" xml:space="preserve">
    <value>§ means forbidden DCC address</value>
  </data>
  <data name="At" xml:space="preserve">
    <value>At</value>
  </data>
  <data name="ShuntingInstructions" xml:space="preserve">
    <value>Shunting instructions</value>
  </data>
  <data name="Card" xml:space="preserve">
    <value>Card?</value>
  </data>
  <data name="TrainCompositions" xml:space="preserve">
    <value>Train compositions</value>
  </data>
  <data name="OtherFinalDestination" xml:space="preserve">
    <value>Other final destination</value>
  </data>
  <data name="LastDay" xml:space="preserve">
    <value>Last day</value>
  </data>
</root>