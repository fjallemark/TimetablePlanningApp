@page "/turnuswagoncards"
@layout PrintLayout
@inject IStringLocalizer<App> Localizer
@inject NavigationManager Navigator
@inject Services.PrintedReportsService DataService

@if (Items == null)
{
    <CreatingReport />
}
else
{
    <RefreshButton OnClick="OnInitializedAsync" />

    <div >

        @foreach (var itemsOnPage in Items.ItemsPerPage(4))
        {
            <div class="pagebreak" style="display: flex; flex-direction: row">
                @foreach (var item in itemsOnPage)
                {
                    <TurnusWagonCard Item="@item"></TurnusWagonCard>
                }
            </div>
        }
    </div>

}


@code {
    string? Operator { get; set; }
    private IEnumerable<TrainsetSchedule>? Items { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var layoutResult = await DataService.GetLayoutAsync();
        if (layoutResult.statusCode.IsSuccess())
        {
            var result = await DataService.GetTrainsetSchedulesAsync(layoutResult.item!.Id);
            if (result.statusCode.IsSuccess())
            {
                SetQueryStringParameters();
                Items = result.items.Where(i => i.PrintCard && i.IsFirstDay &&  i.Operator.EqualsAny(Operator));
            }
        }
    }

    void SetQueryStringParameters()
    {
        var q = Navigator.QueryString();
        Operator = q["operator"];
    }
}
