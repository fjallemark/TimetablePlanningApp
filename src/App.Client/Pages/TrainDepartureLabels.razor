@page "/trainstartlabels"
@layout PrintLayout
@inject NavigationManager Navigator
@inject IStringLocalizer<App> Localizer
@inject Services.PrintedReportsService DataService
@inject IOptions<AppSettings> Options


@if (Data is null)
{
    <CreatingReport />
}
else
{
    @foreach (var itemsPerPage in Data.ItemsPerPage(5))
    {
        <div class="pagebreak">
            @foreach (var departure in itemsPerPage)
            {
                <TrainDepartureTrackLabel Departure="@departure"></TrainDepartureTrackLabel>
            }
        </div>
    }
}

@code {
    private IEnumerable<TrainDeparture>? Data;
    private string? Operators;

    protected async override Task OnInitializedAsync()
    {
        var settings = Options.Value;
        SetQueryStringParameters();
        var result = await DataService.GetTrainDeparturesAsync(settings.LayoutId);
        if (result.statusCode.IsSuccess())
        {
            Data = Operators.HasValue() ? result.items.Where(i => i.Loco.OperatorName.EqualsAny(Operators)): result.items;
        }
    }

    void SetQueryStringParameters()
    {
        var q = Navigator.QueryString();
        Operators = q["operator"];
    }
}
