@page "/graphictimetables"
@layout PrintLayout
@inject IStringLocalizer<App> Localizer
@inject NavigationManager Navigator
@inject PrintedReportsService DataService

@if (!DataIsReady)
{
    <div class="print creatingreport">@Localizer["CreatingReport"]</div>
}
else
{
    foreach (var timetableStretch in TimetableStretches)
    {
        <GraphicTimetableStretch Data="@timetableStretch" OnlyDays="@SelectedDays"></GraphicTimetableStretch>
    }
}

@code {
    private TimetableStretch[] TimetableStretches = Array.Empty<TimetableStretch>();
    private bool DataIsReady = false;
    private string? SelectedStretch;
    private string? SelectedDays;

    protected async override Task OnInitializedAsync()
    {
        SetQueryStringParameters();
        DataIsReady = false;
        var result = await DataService.GetTimetableStretchesAsync(Globals.AppSettings.LayoutId, SelectedStretch);
        if (result.statusCode.IsSuccess())
        {
            TimetableStretches = result.items.ToArray();
        }
        else
        {
        }
        DataIsReady = true;
    }

    void SetQueryStringParameters()
    {
        var q = Navigator.QueryString();
        SelectedStretch = q["line"];
        SelectedDays = q["days"];
    }


}
