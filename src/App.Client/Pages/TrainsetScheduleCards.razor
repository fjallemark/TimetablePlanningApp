@page "/trainsetschedules"
@layout PrintLayout
@inject IStringLocalizer<App> Localizer
@inject NavigationManager Navigator
@inject Services.PrintedReportsService DataService
@inject IOptions<AppSettings> Options

@if (Items == null)
{
    <CreatingReport />
}
else
{
    <RefreshButton OnClick="OnInitializedAsync" />

    @foreach (var itemsOnPage in Items.ItemsPerPage(10))
    {
        <div class="pagebreak">
            @foreach (var item in itemsOnPage)
            {
                <VehicleScheduleCard Item="@item"></VehicleScheduleCard>
            }
        </div>
    }
}

@code {
    string? Operator { get; set; }
    private IEnumerable<TrainsetSchedule>? Items { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var settings = Options.Value;
        var result = await DataService.GetTrainsetSchedulesAsync(settings.LayoutId);
        if (result.statusCode.IsSuccess())
        {
            SetQueryStringParameters();
            Items = result.items.Where(i => string.IsNullOrWhiteSpace(Operator) || i.Operator.EqualsAny(Operator));
        }
    }

    void SetQueryStringParameters()
    {
        var q = Navigator.QueryString();
        Operator = q["operator"];
    }
}
