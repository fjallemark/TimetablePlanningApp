@page "/stationstrainorder"

@layout PrintLayout
@inject IStringLocalizer<App> Localizer
@inject PrintedReportsService DataService
@inject IOptions<AppSettings> Options

@if (Items is null)
{
    <CreatingReport />
}
else
{
    <RefreshButton OnClick="OnInitializedAsync" />

    foreach (var station in Items)
    {
        foreach (var itemsPerPage in station.Trains.ItemsPerPage(27 - (int)(station.Trains.Where(t => t.Notes.Count() > 1).Count()*0.8)))
        {
            <A4LPage>
                <div class="stationtrainorder">
                    <h1>@station.Name @itemsPerPage.First().SortTime.AsTime() - @itemsPerPage.Last().SortTime.AsTime()</h1>
                    <table cellpadding="3">
                        <thead>
                            <tr>
                                <th class="col">@Localizer["Train"]</th>
                                <th class="col">@Localizer["Days"]</th>
                                <th class="col">@Localizer["Track"]</th>
                                <th class="col">@Localizer["Arr"]</th>
                                <th class="col">@Localizer["From"]</th>
                                <th class="col">@Localizer["Dep"]</th>
                                <th class="col">@Localizer["To"]</th>
                                <th class="day">@Localizer["SundayShort"]</th>
                                <th class="day">@Localizer["MondayShort"]</th>
                                <th class="day">@Localizer["TuesdayShort"]</th>
                                <th class="day">@Localizer["WednesdayShort"]</th>
                                <th class="day">@Localizer["ThursdayShort"]</th>
                                <th class="day">@Localizer["FridayShort"]</th>
                                <th class="day">@Localizer["SaturdayShort"]</th>
                                <th class="note">@Localizer["Note"]</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in itemsPerPage)
                            {
                                <tr style="@item.RowStyle()">
                                    <td class="col" style="font-weight: bold">@item.TrainIdentity()</td>
                                    <td class="col">@item.OperatingDayFlag.OperationDays().ShortName</td>
                                    <td class="col">@item.TrackNumber</td>
                                    <td class="col @item.OriginCssClass()">@item.DisplayedArrivalTime()</td>
                                    <td class="col @item.OriginCssClass()" align="left">@item.Origin()</td>
                                    <td class="col @item.DestinationCssClass()">@item.DisplayedDepartureTime()</td>
                                    <td class="col @item.DestinationCssClass()" align="left">@item.Destination()</td>
                                    <td class="day" style="@item.DayFillColor(0x40)"></td>
                                    <td class="day" style="@item.DayFillColor(0x01)"></td>
                                    <td class="day" style="@item.DayFillColor(0x02)"></td>
                                    <td class="day" style="@item.DayFillColor(0x04)"></td>
                                    <td class="day" style="@item.DayFillColor(0x08)"></td>
                                    <td class="day" style="@item.DayFillColor(0x10)"></td>
                                    <td class="day" style="@item.DayFillColor(0x20)"></td>
                                    <td class="note" width="500">
                                        @foreach (var note in item.Notes)
                                        {
                                            <span style="display: block">@((MarkupString)note.ToString()) </span>
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </A4LPage>
        }
    }
}


@code {
    private IEnumerable<StationTrainOrder>? Items;

    protected override async Task OnInitializedAsync()
    {
        var settings = Options.Value;
        var result = await DataService.GetStationsTrainOrderAsync(settings.LayoutId);
        if (result.statusCode.IsSuccess())
        {
            Items = result.items;
        }
    }


}
