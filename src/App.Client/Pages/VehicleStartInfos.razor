@page "/vehiclestartinfos"
@page "/vehiclestartinfos/{option}"
@layout PrintLayout

@inject IStringLocalizer<App> Localizer
@inject Services.PrintedReportsService DataService
@inject IOptions<AppSettings> Options

@if (StartInfos is null)
{
    <CreatingReport />
}
else
{
    @foreach (var infoGroup in StartInfos)
    {
        <A4LPage>
            @if (IsPerOwner(Option))
            {
                @if (HasBookings) {
                    <h2 style="line-height: 16pt">@((MarkupString)infoGroup.First().OwnerOrNotBooked())</h2>
                }
                else
                {
                    <h2 style="line-height: 16pt">@Localizer["NeedForVehicles"]</h2>
                }
            }
            else
            {
                <h2>@infoGroup.First().StationName</h2>
            }
            <div style="font-size: 11pt">
                <table cellspacing="2" cellpadding="2" width="100%">
                    <thead>
                        <tr style="border-bottom: 1px solid gray">
                            @if (IsPerOwner(Option))
                            {
                                <th align="left">@Localizer["Station"]</th>
                            }
                            else
                            {
                                <th align="center">@Localizer["Days"]</th>
                            }
                            <th align="center">@Localizer["Track"]</th>
                            <th align="center">@Localizer["Time"]</th>
                            <th align="center">@Localizer["VehicleType"]</th>
                            <th align="center">@Localizer["Operator"]</th>
                            <th align="center">@Localizer["Turnus"]</th>
                            <th align="center">@Localizer["Class"]</th>
                            <th align="center">@Localizer["Number"]</th>
                            <th align="center">DCC</th>
                            <th align="center">FRED?</th>
                            <th align="left">@Localizer["Notes"]</th>
                            @if (!IsPerOwner(Option))
                            {
                                <th align="left">@Localizer["Owner"]</th>
                                <th>@Localizer["IsSetUp"]</th>
                            }
                            else
                            {
                                <th>@Localizer["IsWith"]</th>

                            }
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var info in Sorted(infoGroup))
                        {
                            <tr style="border-bottom: 1px solid gray; background-color: @info.BackColor()">
                                @if (IsPerOwner(Option))
                                {
                                    <td>@info.StationName</td>
                                }
                                else
                                {
                                    <td align="center">@info.DayFlags.OperationDays().ShortName</td>
                                }
                                <td align="center">@info.TrackNumber</td>
                                <td align="center">@info.DisplayedTime()</td>
                                <td align="center">@info.VehicleType</td>
                                <td align="center">@info.OperatorSignature</td>
                                <td align="center">@info.TurnusNumber</td>
                                <td align="center">@info.VehicleClass</td>
                                <td align="center">@info.VehicleNumber</td>
                                <td align="center">@((MarkupString)info.DccAddressOrMissingOrNotApplicable())</td>
                                <td align="center">@info.FredYesNo()</td>
                                <td align="left">@info.Notes()</td>
                                @if (!IsPerOwner(Option))
                                {
                                    <td>@((MarkupString)info.OwnerOrNotBooked())</td>
                                }
                                @if (info.ReplaceOrder == 0)
                                {
                                    <td align="center"><input type="checkbox" /></td>
                                }
                                else
                                {
                                    <td></td>
                                }
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <div style="text-align: center">Utskrivet @DateTime.Now.ToShortDateString() @DateTime.Now.ToShortTimeString()</div>
        </A4LPage>
    }
}


@code {
    [Parameter] public string? Option { get; set; }
    IEnumerable<IGrouping<string?, VehicleStartInfo>>? StartInfos;
    bool HasBookings;

    protected async override Task OnParametersSetAsync()
    {
        var result = await DataService.GetVehicleStartInfosAsync(Options.Value.LayoutId);
        if (result.statusCode.IsSuccess())
        {
            HasBookings = result.items.Any(i => i.OwnerName.HasValue());
            if (IsPerOwner(Option))
            {
                StartInfos = result.items.Where(i => i.IsFirstDay).OrderBy(i => i.OwnerName).GroupBy(i => i.OwnerName);
            }
            else
            {
                StartInfos = result.items.Where(i => i.ReplaceOrder < 9).GroupBy(i => i.StationName);
            }
        }
    }

    bool IsPerOwner(string? option) => "perowner".Equals(option, StringComparison.OrdinalIgnoreCase);

    IEnumerable<VehicleStartInfo> Sorted(IGrouping<string?, VehicleStartInfo> data) =>
        IsPerOwner(Option) ? data.OrderBy(g => g.StationName).ThenBy(g => g.TrackNumber).ThenBy(i => i.TurnusNumber) :
        data.OrderBy(g => g.ReplaceOrder).ThenByDescending(g => g.IsFirstDay).ThenByDescending(g => g.DayFlags).ThenBy(g => g.TurnusNumber).ThenBy(g => g.TrackNumber);

}
